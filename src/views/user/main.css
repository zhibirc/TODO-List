@import "../../css/font-awesome.css";

#toggle_menu {
    height: 50px;
    margin: 0 auto;
    position: relative;
    width: 50px;
}

#toggle_menu i {
    cursor: pointer;
}

#fa_lock, #fa_unlock {
    font-size: .9em;
    left: 50px;
    position: absolute;
    top: 10px;
}

#toggle_menu.active {
    float: left;
    margin: 0;
}

#toggle_menu.active + #settings {
    display: block;
}

#settings {
    display: none;
    float: right;
    font-size: .7em;
    list-style: none;
    margin: 0;
}

#settings li {
    cursor: pointer;
    display: inline-block;
    padding: 0 20px;
}

#settings li i {
    display: none;
}

#stat {
    border-collapse: collapse;
    height: 30px;
    margin-top: 50px;
    width: 100%;
}

#sort {
    cursor: pointer;
}

section {
    margin: 0 auto;
    padding-top: 30px;
    max-width: 640px;
}

label {
    display: block;
    margin: 0 auto 10px;
    width: 100%;
}

input {
    box-sizing: border-box;
    font-size: .875rem;
    height: 46px;
    padding: 5px 12px;
    width: 91.5%;
}

button {
    font-size: 20px;
}

input, button {
    border: 0;
}

#overlay {
    background: rgba(0, 0, 0, .6);
    height: 100%;
    left: 0;
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 1000;
}

#popup {
    height: 150px;
    left: 50%;
    margin-left: -150px;
    overflow: auto;
    position: absolute;
    width: 300px;
    z-index: 1001;
}

#popup p {
    cursor: pointer;
    height: 30px;
    line-height: 30px;
    margin: 0;
    padding-left: 10px;
}

#popup p:nth-child(1):after {
    content: " (be)";
}

#popup p:nth-child(2):after {
    content: " (de)";
}

#popup p:nth-child(3):after {
    content: " (en)";
}

#popup p:nth-child(4):after {
    content: " (es)";
}

#popup p:nth-child(5):after {
    content: " (iw)";
}

#popup p:nth-child(6):after {
    content: " (ru)";
}

#popup p:nth-child(7):after {
    content: " (uk)";
}

#popup p:nth-child(8):after {
    content: " (fi)";
}

#popup p:nth-child(9):after {
    content: " (fr)";
}

#popup p:last-child {
    border-bottom: 0 !important;
}

.disabled {
    pointer-events: none;
}
